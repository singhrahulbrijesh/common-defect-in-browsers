select * from public."final_dataset" order by component;
select count(*) from public."final_dataset";
select * from public."bug_data";
select com_id from git_commit;

select * from bug_data;
select * from git_revision;
select * from components

-- rename components table to component_old

ALTER TABLE components RENAME TO component_old;
-- create new table components(component_id numeric autogenerated, component_name text)
CREATE TABLE components_1 (component_id numeric ,component_name text);
sfgsg

--select c.commit, r.path, r.dir from git_commit c left join git_revision r on c.commit = r.commit limit 1000;

-- List all the unique component names from bug_data and populate compoments
ALTER TABLE bug_data ADD COLUMN new_comp_name TEXT;

UPDATE bug_data SET new_comp_name = SUBSTRING(component FROM 1 FOR POSITION('>' IN component || '>') - 1);

INSERT INTO components_1 (component_name)
SELECT DISTINCT new_comp_name FROM bug_data;

select 

-- Take the root dir substring from the dir (not null) in git_revision and consider it as component, insert into compoments table only if it does not exist
-- INSERT INTO components (component_name)
-- SELECT TRIM(SUBSTRING(dir FROM 1 FOR POSITION('/' IN dir || '/') - 1))
-- FROM git_revision;

-- UPDATE components SET component_name = (
--   SELECT component_name(DISTINCT component_name), ',')
--   FROM components
-- );


-- Take the root dir substring from the dir (not null) in git_revision and consider it as component, insert into compoments table only if it does not exist
Insert into components_1(component_name)
SELECT DISTINCT component_name FROM components

select * from components_1
where component_id = 132

ALTER TABLE components_1 ADD COLUMN component_id INTEGER;


UPDATE components_1 SET component_id = floor(random() * 192) + 1;

UPDATE components_1 AS c1
SET component_id = (
  SELECT COALESCE(
    (SELECT component_id FROM components_1 AS c2 WHERE c2.component_name = c1.component_name),
    floor(random() * 192) + 1
  )
);



UPDATE components_1 c1
SET component_id = 
  (SELECT x FROM 
    (SELECT floor(random() * 192) + 1 AS x) AS rand_num 
    WHERE NOT EXISTS 
      (SELECT 1 FROM components_1 c2 WHERE c2.component_id = rand_num.x) 
    LIMIT 1
  )
WHERE component_id IS NULL;











select * from git_revision

SELECT COUNT(*) FROM git_revision WHERE new_path IS NULL;


-- create a new column "component_id" in git_revision table
Alter table git_revision add column component_id INTEGER
Alter table git_revision add column commit_1 text
ALTER TABLE git_revision DROP CONSTRAINT commit;

UPDATE git_revision SET commit_1 = commit;


UPDATE git_revision r
SET component_id = c.component_id
FROM components_1 c
WHERE split_part(r.dir, '/', 1) = c.component_name;


select * from components_1


--for each row in git_revision table update with component id from components table
--update git_revision r set r.component_id = select c.component_id from components c where substr("regex", r.dir ) = substr("regex", c.component_name)

INSERT INTO git_revision (component_name)
SELECT TRIM(SUBSTRING(dir FROM 1 FOR POSITION('/' IN dir || '/') - 1))
FROM git_revision;
alter table components_1 add column add numeric
alter table components_1 add column remove numeric
--Joining component_1 table with git_revision table using component_id 
SELECT g.component_id,c.component_name
FROM git_revision g
inner JOIN components_1 c ON g.component_id = c.component_id
WHERE g.component_id = c.component_id;

insert into component_new 
select g.add, g.remove from git_revision
join component_new on 
g.component_id = 

insert into ch_component 
select component_id, component_name, add, remove from git_revision
where component_id is not null and component_name is not null
order by  component_name desc





SELECT component_name, COUNT(*) as count 
FROM component_2
GROUP BY component_name
ORDER BY count DESC;
SELECT dir, TRIM(SUBSTRING(dir FROM  FOR POSITION('/' IN dir || '/') -1)) from git_revision

select * from git_revision

SELECT dir, TRIM(SUBSTRING(dir FROM 1 FOR POSITION('/' IN REVERSE(dir) || '/') -1)) as last_word from git_revision
SELECT dir, TRIM(SUBSTRING(dir FROM -1 FOR POSITION('/' IN REVERSE(dir)) +1)) AS last_word
FROM git_revision;


-- SELECT DISTINCT component_name FROM component_unique
-- WHERE component_name IN ('blink', 'base', 'services', 'apps', 'headless', 'sync', 'tools', 'printing', 'extensions', 'views', 'tests', 'aura', 'cloud_print', 'fuchsia', 'cc', 'content', 'gfx', 'infra', 'skia', 'ui', 'chromeos', 'google_update', 'media', 'gpu', 'mojo', 'crypto', 'src', 'gin', 'google_apis', 'components', 'chromecast', 'ios', 'sandbox', 'remoting');

-- update component_unique 
-- select  distinct component FROM file_comp_map
-- WHERE component in ('Blink', 'Security', 'UI', 'Mobile', 'IO', 'EnterpriseRetailMode', 'Services', 'Infra', 'Test', 'Tests', 'Speed', 'Enterprise', 'Tools', 'Privacy','FamilyExperiences', 'Webstore', 'Internals', 'Build')


select Component from final_dataset_cromium






